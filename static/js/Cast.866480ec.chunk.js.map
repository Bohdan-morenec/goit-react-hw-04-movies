{"version":3,"sources":["views/Cast/cast.module.scss","fetchAPI/CastFetch.js","views/Cast/Cast.js"],"names":["module","exports","getCast","value","axios","get","fetchParameters","MAINPATH","KEY","CastList","state","castList","a","params","this","props","match","movieId","response","setState","data","cast","className","style","list","map","id","profile_path","name","character","item","img","src","Pgoto404","alt","Component"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,IAAM,kBAAkB,KAAO,mBAAmB,KAAO,qB,6JCQ5DC,EALC,SAACC,GACf,OAAOC,IAAMC,IAAN,UACFC,IAAgBC,SADd,iBAC+BJ,EAD/B,oBACgDG,IAAgBE,O,OCEnEC,E,4MACJC,MAAQ,CACNC,SAAU,I,8FAGZ,8BAAAC,EAAA,6DACUC,EAAWC,KAAKC,MAAMC,MAAtBH,OADV,SAGyBX,EAAQW,EAAOI,SAHxC,OAGQC,EAHR,OAKEJ,KAAKK,SAAS,CAAER,SAAUO,EAASE,KAAKC,OAL1C,gD,0EAOA,WACE,IAAQV,EAAaG,KAAKJ,MAAlBC,SACR,OACE,8BACE,oBAAIW,UAAWC,IAAMC,KAArB,SACIb,GACAA,EAASc,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACX,qBAAIP,UAAWC,IAAMO,KAArB,UACE,qBACER,UAAWC,IAAMQ,IACjBC,IACEL,EAAY,yCAC0BA,GAClCM,IAENC,IAAI,eAEN,4BAAIN,IACJ,4CAAeC,OAXeH,OAa3B,sD,GAhCIS,aAsCR1B","file":"static/js/Cast.866480ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"cast_img__22VP0\",\"list\":\"cast_list__2moCd\",\"item\":\"cast_item__SsH3A\"};","import axios from \"axios\";\r\n\r\nimport fetchParameters from \"./queryParameters\";\r\n\r\nconst getCast = (value) => {\r\n  return axios.get(\r\n    `${fetchParameters.MAINPATH}movie/${value}/credits?${fetchParameters.KEY}`\r\n  );\r\n};\r\nexport default getCast;\r\n","import { Component } from \"react\";\r\n\r\nimport Pgoto404 from \"../../img/unnamed.jpg\";\r\n\r\nimport style from \"./cast.module.scss\";\r\n\r\nimport getCast from \"../../fetchAPI/CastFetch\";\r\n\r\nclass CastList extends Component {\r\n  state = {\r\n    castList: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { params } = this.props.match;\r\n\r\n    const response = await getCast(params.movieId);\r\n\r\n    this.setState({ castList: response.data.cast });\r\n  }\r\n  render() {\r\n    const { castList } = this.state;\r\n    return (\r\n      <div>\r\n        <ul className={style.list}>\r\n          {(castList &&\r\n            castList.map(({ id, profile_path, name, character }) => (\r\n              <li className={style.item} key={id}>\r\n                <img\r\n                  className={style.img}\r\n                  src={\r\n                    profile_path\r\n                      ? `https://image.tmdb.org/t/p/w500${profile_path}`\r\n                      : Pgoto404\r\n                  }\r\n                  alt=\"photoActor\"\r\n                />\r\n                <p>{name}</p>\r\n                <p> Character {character}</p>\r\n              </li>\r\n            ))) || <p>Nothing found</p>}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CastList;\r\n"],"sourceRoot":""}