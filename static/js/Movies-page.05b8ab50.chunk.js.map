{"version":3,"sources":["fetchAPI/queryParameters.js","views/MoviesPage/movieSerch.module.scss","options/PNotify.js","fetchAPI/MoviesPageFatch.js","views/MoviesPage/MoviesPage.js"],"names":["queryParameters","MAINPATH","KEY","module","exports","notifications","info","title","text","modules","Map","Confirm","confirm","buttons","primary","click","notice","close","getMoviesPage","value","axios","get","fetchParameters","moviesPages","state","movieSearchValue","movies","addmovieSearchValue","e","currentTarget","setState","formSumit","preventDefault","getMovies","getMoviesLocal","localStorage","getItem","movieSearchValueLocal","this","JSON","parse","a","response","setItem","stringify","data","results","location","props","className","style","box","onSubmit","tupe","placeholder","onChange","input","button","buttonText","length","map","id","list","link","to","pathname","match","url","from","Component"],"mappings":"yIAKeA,IALS,CACtBC,SAAU,gCACVC,IAAK,6C,mBCDPC,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,yBAAyB,MAAQ,0BAA0B,OAAS,2BAA2B,WAAa,+BAA+B,IAAM,0B,uJC6B3LC,MAxBf,WACEC,eAAK,CACHC,MAAO,gBACPC,KAAM,kCACNC,QAAS,IAAIC,IAAI,CACf,CACEC,EACA,CACEC,SAAS,EACTC,QAAS,CACP,CACEL,KAAM,KACNM,SAAS,EACTC,MAAO,SAACC,GACNA,EAAOC,kB,0CCVRC,EANO,SAACC,GACrB,OAAOC,IAAMC,IAAN,UACFC,IAAgBrB,SADd,wBACsCqB,IAAgBpB,IADtD,kBACmEiB,K,OCGtEI,E,4MACJC,MAAQ,CACNC,iBAAkB,GAClBC,OAAQ,M,EAaVC,oBAAsB,SAACC,GACrB,IAAQT,EAAUS,EAAEC,cAAZV,MAER,EAAKW,SAAS,CAAEL,iBAAkBN,K,EAkBpCY,UAAY,SAACH,GACXA,EAAEI,iBACF,EAAKC,a,uDAjCP,WACE,IAAMC,EAAiBC,aAAaC,QAAQ,gBACtCC,EAAwBF,aAAaC,QAAQ,yBAEnDE,KAAKR,SAAS,CACZJ,OAAQa,KAAKC,MAAMN,GACnBT,iBAAkBY,M,8DAUtB,8BAAAI,EAAA,yDACUhB,EAAqBa,KAAKd,MAA1BC,iBADV,yCAIWpB,KAJX,uBAOyBa,EAAcO,GAPvC,OAOQiB,EAPR,OASEP,aAAaQ,QAAQ,eAAgBJ,KAAKK,UAAUF,EAASG,KAAKC,UAClEX,aAAaQ,QAAQ,wBAAyBlB,GAE9Ca,KAAKR,SAAS,CAAEJ,OAAQgB,EAASG,KAAKC,UAZxC,gD,0EAoBA,WAAU,IAAD,OACP,EAAqCR,KAAKd,MAAlCC,EAAR,EAAQA,iBAAkBC,EAA1B,EAA0BA,OAClBqB,EAAaT,KAAKU,MAAlBD,SAER,OACE,sBAAKE,UAAWC,IAAMC,IAAtB,UACE,uBAAMC,SAAUd,KAAKP,UAArB,UACE,uBACEsB,KAAK,OACLC,YAAY,eACZnC,MAAOM,EACP8B,SAAUjB,KAAKX,oBACfsB,UAAWC,IAAMM,QAEnB,wBAAQP,UAAWC,IAAMO,OAAQJ,KAAK,SAAtC,SACE,sBAAMJ,UAAWC,IAAMQ,WAAvB,yBAGJ,8BACE,6BACGhC,GACCA,EAAOiC,OAAS,GAChBjC,EAAOkC,KAAI,gBAAGC,EAAH,EAAGA,GAAItD,EAAP,EAAOA,MAAP,OACT,oBAAI0C,UAAWC,IAAMY,KAArB,SACE,cAAC,IAAD,CACEb,UAAWC,IAAMa,KACjBC,GAAI,CACFC,SAAS,GAAD,OAAK,EAAKjB,MAAMkB,MAAMC,IAAtB,YAA6BN,GACrCrC,MAAO,CAAE4C,KAAMrB,IAJnB,SAOGxC,KAR2BsD,iB,GAjEtBQ,aAoFX9C","file":"static/js/Movies-page.05b8ab50.chunk.js","sourcesContent":["const queryParameters = {\r\n  MAINPATH: \"https://api.themoviedb.org/3/\",\r\n  KEY: \"api_key=06107a8d40ed107672c06803f6a2ba0d\",\r\n};\r\n\r\nexport default queryParameters;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"movieSerch_link__rM1cZ\",\"list\":\"movieSerch_list__a9YUL\",\"input\":\"movieSerch_input__1P7lw\",\"button\":\"movieSerch_button__3l91_\",\"buttonText\":\"movieSerch_buttonText__2E6tS\",\"box\":\"movieSerch_box__2Uyrt\"};","import { info } from \"@pnotify/core\";\r\nimport \"@pnotify/core/dist/PNotify.css\";\r\nimport \"@pnotify/core/dist/BrightTheme.css\";\r\nimport * as Confirm from \"@pnotify/confirm\";\r\nimport \"@pnotify/confirm/dist/PNotifyConfirm.css\";\r\n\r\nfunction notifications() {\r\n  info({\r\n    title: \"Notifications\",\r\n    text: \"Please fill in the blank field.\",\r\n    modules: new Map([\r\n      [\r\n        Confirm,\r\n        {\r\n          confirm: true,\r\n          buttons: [\r\n            {\r\n              text: \"Ok\",\r\n              primary: true,\r\n              click: (notice) => {\r\n                notice.close();\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    ]),\r\n  });\r\n}\r\n\r\nexport default notifications;\r\n","import axios from \"axios\";\r\n\r\nimport fetchParameters from \"./queryParameters\";\r\n\r\nconst getMoviesPage = (value) => {\r\n  return axios.get(\r\n    `${fetchParameters.MAINPATH}search/movie?${fetchParameters.KEY}&query=${value}`\r\n  );\r\n};\r\n\r\nexport default getMoviesPage;\r\n","import { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport notifications from \"../../options/PNotify\";\r\n\r\nimport style from \"./movieSerch.module.scss\";\r\n\r\nimport getMoviesPage from \"../../fetchAPI/MoviesPageFatch\";\r\n\r\nclass moviesPages extends Component {\r\n  state = {\r\n    movieSearchValue: \"\",\r\n    movies: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const getMoviesLocal = localStorage.getItem(\"moviesLolcal\");\r\n    const movieSearchValueLocal = localStorage.getItem(\"movieSearchValueLocal\");\r\n\r\n    this.setState({\r\n      movies: JSON.parse(getMoviesLocal),\r\n      movieSearchValue: movieSearchValueLocal,\r\n    });\r\n  }\r\n\r\n  addmovieSearchValue = (e) => {\r\n    const { value } = e.currentTarget;\r\n\r\n    this.setState({ movieSearchValue: value });\r\n  };\r\n\r\n  async getMovies() {\r\n    const { movieSearchValue } = this.state;\r\n\r\n    if (!movieSearchValue) {\r\n      return notifications();\r\n    }\r\n\r\n    const response = await getMoviesPage(movieSearchValue);\r\n\r\n    localStorage.setItem(\"moviesLolcal\", JSON.stringify(response.data.results));\r\n    localStorage.setItem(\"movieSearchValueLocal\", movieSearchValue);\r\n\r\n    this.setState({ movies: response.data.results });\r\n  }\r\n\r\n  formSumit = (e) => {\r\n    e.preventDefault();\r\n    this.getMovies();\r\n  };\r\n\r\n  render() {\r\n    const { movieSearchValue, movies } = this.state;\r\n    const { location } = this.props;\r\n\r\n    return (\r\n      <div className={style.box}>\r\n        <form onSubmit={this.formSumit}>\r\n          <input\r\n            tupe=\"text\"\r\n            placeholder=\"movie search\"\r\n            value={movieSearchValue}\r\n            onChange={this.addmovieSearchValue}\r\n            className={style.input}\r\n          ></input>\r\n          <button className={style.button} tupe=\"submit\">\r\n            <span className={style.buttonText}>Search</span>\r\n          </button>\r\n        </form>\r\n        <div>\r\n          <ul>\r\n            {movies &&\r\n              movies.length > 0 &&\r\n              movies.map(({ id, title }) => (\r\n                <li className={style.list} key={id}>\r\n                  <NavLink\r\n                    className={style.link}\r\n                    to={{\r\n                      pathname: `${this.props.match.url}/${id}`,\r\n                      state: { from: location },\r\n                    }}\r\n                  >\r\n                    {title}\r\n                  </NavLink>\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default moviesPages;\r\n"],"sourceRoot":""}